<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" href="xsl/base.xsl"?>
<page>
    <title>Massimo Lauria @ KTH Royal Institute of Technology - Teaching activities</title>
    <page_title>Teaching activities</page_title>

    <entry>
      <entry_title>Fall 2012 — Communication Complexity (Co-Lecturer)</entry_title>
      <p>
        This year the course 2D2441 (i.e. “Seminars on Theoretical
        Computer Science”) is  devoted to Communication Complexity and
        is taught by <a  href="http://www.csc.kth.se/~jakobn/">Jakob Nordström</a>.<br/>

        Consider the following problem:  Alice and Bob want to compute
        a function  <i>f(x,y)</i>. Alice has input  <i>x</i> while Bob
        has input <i>y</i>:  how many bit do they  need to exchange in
        order  to compute  the desired  function?  The  study  of such
        communication  complexity has  application in  circuit design,
        data stream algorithms, cryptography, ecc...
      </p>

      More information can  be found  at the course
      <a href="http://www.csc.kth.se/utbildning/kth/kurser/DD2441/semteo12/">page</a>.
    </entry>

    <entry>
      <entry_title>2010-2011 — Fondamenti di Programmazione (Esercitazioni)</entry_title>
      <p>
        Lo scopo delle esercitazioni di questo corso è quello di
        introdurre gli studenti alla programmazione, utilizzando in
        particolare il linguaggio C.  Le peculiarità di questo
        linguaggio permettono agli studenti di acquisire familiarità
        con il concetto di memoria, di puntatore, di gestione degli
        indirizzi ed in generale di concetti che i linguaggi di
        programmazione più moderni tendono a nascondere.
      </p>

      Per maggiori informazioni sul corso consiglio di visitare le seguenti pagine web:
      <ul>
        <li> La <a
        href="http://www.dsi.uniroma1.it/~galesi/fond.html">pagina
        principale</a> a cura del <a href="http://www.dsi.uniroma1.it/~galesi">Prof. Galesi</a></li>
        <li> Il <a href="labprog2010.html">diario delle esercitazioni</a> a cura di Massimo Lauria</li>
      </ul>

    </entry>

    <entry>
      <entry_title>2009-2010 — Metodi Matematici per L'Informatica (Esercitazioni)</entry_title>
      <p>
        Nell’anno accademico 2009-2010 ho condotto le esercitazioni
        del Canale P-Z del corso di “Metodi Matematici per
        L’Informatica”. Le informazioni per questo corso non sono su
        questo sito, e possono essere trovate alla seguente pagina
        web:
      </p>
      <a href="http://twiki.di.uniroma1.it/twiki/view/Logica_PZ/WebHome">
        Metodi Matematici per L’Informatica (canale P-Z), anno accademico 2009-2010
      </a>

      <p>
        A grandi linee il corso introduce agli studenti i concetti più
        semplici della logica e del ragionamento deduttivo.  Sia dal
        punto di vista formale, attraverso lo studio dei sistemi
        logici, sia dal punto di vista pratico, mettendoli di fronte
        all’esigenza di capire, riprodurre e <em>produrre</em>
        dimostrazioni matematiche corrette.
      </p>

    </entry>

    <entry>
      <entry_title>2007-2008 — Architettura 2 (Tutoraggio)</entry_title>
      <p>
        Qui potete trovare il codice sorgente legato alle sessioni di tutoraggio
        per il corso di architettura 2. Se avete domande sul codice potete
        contattarmi o farle durante le sessioni di tutoraggio. Alcuni di questi
        programmi possono essere leggermente diversi da quelli visti in classe.
        Vi prego di segnalare eventuali sviste ed errori nel codice!
      </p>

        Trasposta di una matrice
          - <a href="documents/asmex/transpose.s"><tt>transpose.s</tt></a><br/>
        Fattoriale ricorsivo con gestione dello stack
          - <a href="documents/asmex/factorial.s"><tt>factorial.s</tt></a><br/>
        Test per la stringa palindroma
          - <a href="documents/asmex/palindroma.s"><tt>palindroma.s</tt></a><br/>

        Esempio di JAL e JR (progressioni aritmetiche)
          - <a href="documents/asmex/jumpal.s"><tt>jumpal.s</tt></a><br/>
        Esempio di eliminazione di JAL e JR (progressioni aritmetiche)
          - <a href="documents/asmex/jumpbad.s"><tt>jumpbad.s</tt></a><br/>
        Analisi dell'endianess della macchina
          - <a href="documents/asmex/endian.s"><tt>endian.s</tt></a><br/>
        Fusione di due vettori
          - <a href="documents/asmex/merge.s"><tt>merge.s</tt></a><br/>
        Radix sort con memoria di supporto
          - <a href="documents/asmex/radix_sort.s"><tt>radix_sort.s</tt></a><br/>

        Implementazione della funzione Mc Carty 91
          - <a href="documents/asmex/mccarthy.s"><tt>mccarthy.s</tt></a><br/>
        Rovesciatore dei bit di un registro
          - <a href="documents/asmex/flipbits.s"><tt>flipbits.s</tt></a><br/>
        Implementazione della funzione di Ackermann
          - <a href="documents/asmex/ack.s"><tt>ack.s</tt></a><br/>
        Esempio di due funzioni mutuamente ricorsive
          - <a href="documents/asmex/mutualrec.s"><tt>mutualrec.s</tt></a><br/>

</entry>
</page>

